@charset "UTF-8";
.osheader {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  position: fixed;
  width: 250px;
  z-index: 9999;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  height: 100vh;
  background: #1C1B1B; }
  @media (max-width: 50em) {
    .osheader {
      -webkit-box-orient: horizontal;
      -webkit-box-direction: normal;
          -ms-flex-direction: row;
              flex-direction: row;
      width: 100%;
      height: 80px; } }
  .osheader .oslogo {
    margin-left: 30px;
    position: absolute;
    bottom: 30px;
    font-weight: 300;
    width: 100px; }
    @media (max-width: 50em) {
      .osheader .oslogo {
        position: relative;
        top: 0px;
        bottom: 0px;
        margin-left: 15px; } }
  .osheader .oscategory {
    padding-top: 20px;
    margin-top: 70px; }
    .osheader .oscategory ul {
      list-style: none;
      margin: 0px;
      padding: 0px;
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-orient: vertical;
      -webkit-box-direction: normal;
          -ms-flex-direction: column;
              flex-direction: column; }
      .osheader .oscategory ul li {
        padding: 15px 15px; }
        .osheader .oscategory ul li a {
          text-decoration: none;
          color: white;
          cursor: pointer;
          font-size: 15px;
          font-weight: 300;
          padding: 0px 10px;
          position: relative;
          overflow: hidden; }
          .osheader .oscategory ul li a:after {
            position: absolute;
            top: 100%;
            left: 0;
            display: block;
            width: 100%;
            height: 1.5px;
            background-color: #FFF;
            content: "";
            border-bottom: 1px solid #FFF;
            -webkit-transform: scale(0);
                    transform: scale(0); }
          .osheader .oscategory ul li a:hover:after {
            transition: -webkit-transform .4s ease;
            transition: transform .4s ease;
            transition: transform .4s ease, -webkit-transform .4s ease;
            -webkit-transform: scale(0.9);
                    transform: scale(0.9); }

.check:after {
  content: "";
  -webkit-transform: scale(0.9) !important;
          transform: scale(0.9) !important; }

@media (max-width: 50em) {
  .oscategory {
    display: none; } }

.ham-container {
  position: absolute;
  overflow: hidden;
  height: 80px;
  width: 100px;
  right: 0px;
  display: none; }
  @media (max-width: 50em) {
    .ham-container {
      display: block; } }

.nav-toggle {
  position: absolute;
  right: 25px;
  top: 30px;
  z-index: 9999;
  cursor: pointer; }

.hamburger {
  width: 25px;
  height: 15px; }

.hamburger span {
  background: #FFF;
  display: block;
  position: absolute;
  height: 2px;
  -webkit-transform: rotate(0deg);
  transform: rotate(0deg);
  transition: all 0.4s cubic-bezier(0.22, 0.61, 0.36, 1);
  opacity: 1;
  width: 100%;
  right: 0; }

.hamburger span:nth-child(1) {
  top: 0px; }

.hamburger span:nth-child(2) {
  top: 8px; }

.hamburger span:nth-child(3) {
  top: 16px; }

.hamburger.open span:nth-child(1) {
  top: 5px;
  -webkit-transform: rotate(30deg);
  transform: rotate(30deg);
  width: 50%; }

.hamburger.open span:nth-child(3) {
  top: 11px;
  -webkit-transform: rotate(-30deg);
  transform: rotate(-30deg);
  width: 50%; }

nav {
  position: fixed;
  right: 0;
  top: 0;
  -webkit-transform: translate3d(100%, 0, 0);
          transform: translate3d(100%, 0, 0);
  transition: all .25s ease-out;
  background: #141414;
  width: 100%;
  height: 100vh;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  text-align: left;
  box-shadow: 0px 0px 60px -15px rgba(0, 0, 0, 0.2); }

.nav-open nav {
  -webkit-transform: translate3d(0, 0, 0);
          transform: translate3d(0, 0, 0);
  transition: all .4s ease; }

nav ul {
  list-style: none;
  margin: 0;
  padding: 0;
  display: table-cell;
  vertical-align: middle; }

nav li {
  -webkit-transform: translate3d(40px, 0, 0);
          transform: translate3d(40px, 0, 0);
  opacity: 0;
  transition: all 0.4s cubic-bezier(0.22, 0.61, 0.36, 1);
  margin: 15px 0;
  text-align: center; }
  nav li a {
    font-size: 22px;
    padding: 11px 0px;
    letter-spacing: 0.5px;
    font-weight: 300; }
    nav li a:hover, nav li a:focus {
      color: white; }

nav p {
  font-size: 10px;
  color: #fff;
  bottom: 0px;
  position: absolute; }

.nav-open nav li {
  -webkit-transform: translateY(0);
  transform: translateY(0);
  opacity: 1; }

.nav-open nav li:nth-child(1) {
  transition-delay: 200ms; }

.nav-open nav li:nth-child(2) {
  transition-delay: 300ms; }

.nav-open nav li:nth-child(3) {
  transition-delay: 400ms; }

.nav-open nav li:nth-child(4) {
  transition-delay: 500ms; }

.nav-open nav li:nth-child(5) {
  transition-delay: 600ms; }

.nav-open nav li:nth-child(6) {
  transition-delay: 700ms; }

.nav-open .hamburger span {
  background: #FFFFFF; }

nav a {
  color: #fff;
  font-size: 24px;
  text-decoration: none;
  display: block; }
  nav a:after {
    content: "‚ûù";
    display: inline-block;
    font-size: 0.85em;
    padding-left: 0.35em;
    opacity: 0;
    -webkit-transform: translateX(-5px);
            transform: translateX(-5px);
    transition: transform 0.3s cubic-bezier(0, 0.25, 0.08, 1), opacity 0.3s cubic-bezier(0, 0.25, 0.08, 1), -webkit-transform 0.3s cubic-bezier(0, 0.25, 0.08, 1); }
  nav a:hover:after {
    opacity: 1;
    -webkit-transform: translateX(0);
    transform: translateX(0); }

body,
h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: 'Orkney', Helvetica Neue, Helvetica, Arial, sans-serif; }

p {
  color: dimgray; }

body {
  background-color: #FFF;
  position: relative;
  height: auto;
  min-height: 100%;
  padding: 0.1px;
  margin: 0px;
  color: #222; }
  body:before {
    position: absolute;
    width: auto;
    height: auto;
    z-index: 9999;
    content: '';
    display: block;
    pointer-events: none;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background-color: transparent;
    background-image: linear-gradient(90deg, transparent 1px, transparent 1px);
    background-size: 100px 100%; }
    @media (max-width: 50em) {
      body:before {
        background-size: 50px 100%; } }

.button:focus {
  outline: 0; }

img {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-user-drag: none; }

.wrapper {
  padding-left: 250px; }
  @media (max-width: 50em) {
    .wrapper {
      padding-left: 0px; } }

.none {
  display: none;
  visibility: hidden; }

.quote {
  padding: 100px;
  margin-bottom: 0px;
  padding-right: 180px;
  padding-bottom: 70px;
  background: #F8F8F9; }
  @media (max-width: 50em) {
    .quote {
      margin: 0px;
      padding: 100px 10px;
      padding-top: 120px; } }
  .quote blockquote {
    font-size: 40px;
    line-height: 60px;
    letter-spacing: 0.5px;
    color: #222;
    margin: 0px;
    margin-bottom: 20px; }
    @media (max-width: 50em) {
      .quote blockquote {
        margin: 0px;
        margin-bottom: 20px;
        margin-top: 25px;
        font-size: 30px;
        line-height: 50px; } }
  .quote span {
    font-size: 15px;
    color: #222;
    letter-spacing: .025em;
    line-height: 1.55556;
    font-weight: 300; }
    @media (max-width: 50em) {
      .quote span {
        margin-left: 0px; } }

.oswrapper {
  margin: 0px 180px 50px 100px;
  margin-bottom: 20px;
  outline: 0;
  border: 0; }
  @media (max-width: 50em) {
    .oswrapper {
      margin: 10px; } }
  .oswrapper h1 {
    font-weight: 400;
    margin-bottom: 30px;
    color: #222;
    font-size: 22px;
    padding-top: 80px;
    text-decoration: underline; }
  .oswrapper a {
    color: #141414;
    text-decoration: none; }
  .oswrapper h4 {
    font-size: 20px;
    margin: 0px;
    font-weight: 300; }
    .oswrapper h4 span {
      font-family: Arial, sans-serif;
      vertical-align: baseline; }
  .oswrapper p {
    font-size: 15px;
    font-style: normal;
    font-weight: 300;
    margin-bottom: 0px;
    letter-spacing: .025em;
    line-height: 1.55556; }
  .oswrapper .grid-item {
    height: 170px;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    border-bottom: 1px solid #f2f2f2;
    width: 100%; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
